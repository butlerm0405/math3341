% MATH 3341: Introduction to Scientific Computing Lab
% Libao Jin
% September 27, 2021

# Lab 06: LU Decomposition

## The LU Decomposition

### Linear System and Its Matrix Form

Consider the system of equations

\begin{align*}
    10 x_1 - x_2 + 2 x_3 & = 6 \\
    -1 x_1 + 11 x_2 - x_3 + 3 x_4 & = 25 \\
    2 x_1 - x_2 + 10 x_3 - x_4 & = -11 \\
    3 x_2 - x_3 + 8 x_4 & = 15 \\
\end{align*}

In matrix form we have the equation $A \mathbf{x} = \mathbf{b}$
$$
\underbrace{
\begin{bmatrix}
10 & -1 & 2  & 0  \\
-1 & 11 & -1 & 3  \\
2  & -1 & 10 & -1 \\
0  & 3  & -1 & 8  \\
\end{bmatrix}}_{A}
\underbrace{
\begin{bmatrix}
x_1 \\
x_2 \\
x_3 \\
x_4 \\
\end{bmatrix}}_{\mathbf{x}}
=
\underbrace{
\begin{bmatrix}
6   \\
25  \\
-11 \\
15  \\
\end{bmatrix}}_{\mathbf{b}}
$$

###

The LU decomposition allows us to factor the matrix $A$ into two matrices, a lower triangular matrix $L$ and an upper triangular matrix $U$. The LU decomposition can be viewed as the matrix form of Gaussian elimination. Computers usually solve square systems of linear equations using the LU decomposition, and it is also a key step when inverting a matrix or computing the determinant of a matrix.
\begin{align*}
A
= LU
& = \begin{bmatrix}
a_{11} & a_{12} & a_{13} & a_{14} \\
a_{21} & a_{22} & a_{23} & a_{24} \\
a_{31} & a_{32} & a_{33} & a_{34} \\
a_{41} & a_{42} & a_{43} & a_{44} \\
\end{bmatrix}
\\ & = \begin{bmatrix}
1      & 0      & 0      & 0 \\
l_{21} & 1      & 0      & 0 \\
l_{31} & l_{32} & 1      & 0 \\
l_{41} & l_{42} & l_{43} & 1 \\
\end{bmatrix}
\begin{bmatrix}
u_{11} & u_{12} & u_{13} & u_{14} \\
0      & u_{22} & u_{23} & u_{24} \\
0      & 0      & u_{33} & u_{34} \\
0      & 0      & 0      & u_{44} \\
\end{bmatrix}.
\end{align*}
Upper and lower triangular systems are easy to solve using forward or backward subsitution algorithms.

### Solve the Linear System using LU Decomposition

To solve the linear system $A \mathbf{x} = \mathbf{b}$, we perform the following:

> 1. Perform the LU decompositon of $A$ using `[L U] = lu(A)` in MATLAB.
> 2. Observe that
>    $$
>    A \mathbf{x}
>    = LU \mathbf{x}
>    = L (U \mathbf{x})
>    = L \mathbf{z}
>    = \mathbf{b}
>    \implies L^{-1} L \mathbf{z} = \mathbf{z} = L^{-1} \mathbf{b},
>    $$
>    where $\mathbf{z} = U \mathbf{x}$. In MATLAB, use `z = L \ b` to solve for $\mathbf{z}$ in $L \mathbf{z} = \mathbf{b}$.
> 3. Next, solve for $\mathbf{x}$ in $U \mathbf{x} = \mathbf{z}$, we have
>    $$
>    U \mathbf{x} = \mathbf{z}
>    \implies U^{-1} U \mathbf{x} = I \mathbf{x} = \mathbf{x} = U^{-1} \mathbf{z}.
>    $$
> In MATLAB, use `x = U \ z`.

### `lu` factorization.

`[L,U] = lu(A)` stores an upper triangular matrix in U and a "psychologically lower triangular matrix" (i.e. a product of lower triangular and permutation matrices) in L, so that `A = L*U`. A can be rectangular.

### `\`: Backslash or left matrix divide

`A\B` is the matrix division of `A` into `B`, which is roughly the same as `inv(A)*B `, except it is computed in a different way. If `A` is an N-by-N matrix and `B` is a column vector with N components, or a matrix with several such columns, then `X = A\B` is the solution to the equation `A*X = B`.

### Norms

Let $\mathbf{x} = [x_{1}, x_{2}, \ldots, x_{n}] \in \mathbb{R}^{n}$.

> * $\displaystyle \|\mathbf{x}\|_{1} = \sum_{i = 1}^{n} |x_{i}|$.
> * $\displaystyle \|\mathbf{x}\|_{2} = \left(\sum_{i = 1}^{n} x_{i}^2\right)^{1/2} = (\mathbf{x} \cdot \mathbf{x})^{1/2}$.
> * $\displaystyle \|\mathbf{x}\|_{\infty} = \max_{i = 1, \ldots, n} \{|x_{i}|\}$.

### `norm`: Matrix or vector norm

> * `norm(x, 1)` returns the 1-norm of `x`.
> * `norm(x, 2)` returns the 2-norm of `x`.
> * `norm(x, Inf)` returns the infinity norm of `x`.
> * `norm(x)` is the same as `norm(x,2)`.
> * Example:
>   ```
>   x = -ones(4, 1)            % [-1;-1;-1;-1]
>   xNorm1 = norm(x, 1)        % 4
>   xNorm2 = norm(x, 2)        % 2
>   xNormInf = norm(x, Inf)    % 1
>   xNorm2 == dot(x, x)^(1/2)  % logical 1 (true)
>   ```
